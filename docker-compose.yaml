version: "3"
services:
#  rabbitmq:
#    image: "rabbitmq:3-management-alpine"
#    container_name: rabbitmq
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    healthcheck:
#      test: [ "CMD", "rabbitmq-diagnostics", "-q", "status" ]
#      interval: 10s
#      timeout: 10s
#      retries: 5
#    environment:
#      RABBITMQ_ERLANG_COOKIE: "RABBITMQ_ERLANG_COOKIE"
#    networks:
#      - pars
  part:
    container_name: api_part
    build:
      context: ./part
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    depends_on:
#      - rabbitmq
      - db
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: adminminiopassword
      MINIO_PORT: 9000
      MONGODB_URI: mongodb:27017
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      MYSQL_DATABASE: 'parts'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_NAME: 'db'
      MYSQL_PORT: 3306
    networks:
      - pars
  file:
    container_name: api_file
    build:
      context: ./file
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    depends_on:
      - minio
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: adminminiopassword
      MINIO_PORT: 9000
    networks:
      - pars
  email:
    container_name: api_email
    build:
      context: ./email
      dockerfile: Dockerfile
    ports:
      - "8004:8004"
    depends_on:
#      - rabbitmq
      - db
    environment:
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
    networks:
      - pars
#  mongodb:
#    image: mongo
#    container_name: mongodb
#    ports:
#      - "27017:27017"
#    volumes:
#      - mongodb:/data/db
#    restart: unless-stopped

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: 'parts'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    command:
      --init-file /data/application/init.sql
    ports:
      - "3307:3306"
    expose:
      - 3307
    volumes:
      - db:/var/lib/mysql
      - ./mysql/parts.sql:/data/application/init.sql

  minio:
    image: "minio/minio"
    volumes:
      - ./minio/data:/data
    command: minio server /data
    networks:
      - pars
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: adminminiopassword
      MINIO_PORT: 9000
    ports:
      - "9000:9000"
    expose:
      - "9000"
    restart: always

networks:
  pars:
    driver: bridge

volumes:
#  mongodb:
#  rabbitmq:
  db:
